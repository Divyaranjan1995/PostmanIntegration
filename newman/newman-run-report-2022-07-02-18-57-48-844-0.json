{
  "collection": {
    "_": {
      "postman_id": "c0b0a50b-8b8a-498a-8f8e-63f04fdcca2f",
      "exporter_id": "19174492"
    },
    "item": [
      {
        "id": "d5190b26-d582-4edb-bb5a-f596c1fb1aff",
        "name": "AddBook",
        "request": {
          "url": {
            "path": [
              "Library",
              "Addbook.php"
            ],
            "host": [
              "{{base_uri}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\r\n\"name\":\"{{book_name}}\",\r\n\"isbn\":\"{{serialNo}}\",\r\n\"aisle\":\"2529857\",\r\n\"author\":\"{{author_name}}\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "73b1a556-2d0f-41b1-ab48-362ddb3a1345",
              "type": "text/javascript",
              "exec": [
                "//Assertion - Validation response\r",
                "pm.environment.set(\"flag\", false);\r",
                "const jsonData = pm.response.json();\r",
                "var req = JSON.parse(pm.request.body.raw);\r",
                "console.log(jsonData);\r",
                "console.log(jsonData.ID);\r",
                "const bookID = jsonData.ID;\r",
                "pm.environment.set(\"book_ID\", bookID);\r",
                "\r",
                "function cleanupScript()\r",
                "{\r",
                "    const book_id = getBookID();\r",
                "    pm.environment.set(\"book_ID\",book_id);\r",
                "    pm.environment.set(\"flag\", true);\r",
                "    postman.setNextRequest(\"DeleteBook\");\r",
                "\r",
                "}\r",
                "\r",
                "function getBookID()\r",
                "{\r",
                "    const expected_id = req.isbn + req.aisle;\r",
                "    return expected_id; \r",
                "}\r",
                "pm.test(\"Validate status code is 200\", function()\r",
                "{\r",
                "    try \r",
                "    {\r",
                "        pm.response.to.have.status(200);\r",
                "        pm.expect(jsonData).have.property(\"Msg\");\r",
                "        pm.expect(jsonData.Msg).to.eql(\"successfully added\");\r",
                "    }\r",
                "\r",
                "    catch(err)\r",
                "    {\r",
                "        if(jsonData.msg.include(\"exists\"))\r",
                "        {\r",
                "            cleanupScript();\r",
                "        }\r",
                "\r",
                "        \r",
                "\r",
                "    }  \r",
                "\r",
                "\r",
                "});\r",
                "\r",
                "pm.test(\"Header cookies response time validation\", function()\r",
                "{\r",
                "    //Added comments in Test section\r",
                "    pm.response.to.have.header(\"Content-Type\");\r",
                "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json;charset=UTF-8\");\r",
                "    pm.expect(pm.response.responseTime).to.be.below(2200);\r",
                "    pm.expect(pm.response.text()).to.include(\"successfully added\");  \r",
                "\r",
                "});\r",
                "\r",
                "pm.test(\"ID Logic Validation\", function(){\r",
                "    const expected_id = getBookID();\r",
                "    pm.expect(expected_id).to.eql(bookID);\r",
                "\r",
                "\r",
                "});"
              ],
              "_lastExecutionId": "600f3aa6-8702-4fa2-a763-83eacebd086a"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "e406b21d-0e55-4117-a3b1-0d1851f44358",
              "type": "text/javascript",
              "exec": [
                "//RS123456\r",
                "\r",
                "console.log(pm.globals.get(\"companyCode\"));\r",
                "const code = pm.globals.get(\"companyCode\");\r",
                "const value = pm.variables.replaceIn('{{$randomInt}}');\r",
                "pm.collectionVariables.set(\"isbn\", code + value);\r",
                "\r",
                "pm.environment.set(\"book_name\", pm.iterationData.get(\"BookName\"));\r",
                "pm.environment.set(\"author_name\", pm.iterationData.get(\"Author\"));\r",
                "\r",
                "console.log(pm.environment.get(\"book_name\"));\r",
                "console.log(pm.environment.get(\"author_name\"));\r",
                "\r",
                "const serialNo = Math.floor((Math.random() * 100000) + 1);\r",
                "pm.environment.set(\"serialNo\", serialNo);\r",
                "console.log(serialNo);"
              ],
              "_lastExecutionId": "e708b98c-e427-4633-862c-a4118740dfb3"
            }
          }
        ]
      },
      {
        "id": "29a9f17f-d4ba-498b-963a-36a91cdd4fbc",
        "name": "GetBook",
        "request": {
          "url": {
            "path": [
              "Library",
              "GetBook.php"
            ],
            "host": [
              "{{base_uri}}"
            ],
            "query": [
              {
                "key": "ID",
                "value": "{{book_ID}}"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a5236f0a-3a14-40d2-aa83-be4a514cf0b6",
              "type": "text/javascript",
              "exec": [
                "const bookjsonData = pm.response.json()\r",
                "const schema = {\r",
                "  \"type\": \"array\",\r",
                "  \"items\": [\r",
                "    {\r",
                "      \"type\": \"object\",\r",
                "      \"properties\": {\r",
                "        \"book_name\": {\r",
                "          \"type\": \"string\"\r",
                "        },\r",
                "        \"isbn\": {\r",
                "          \"type\": \"string\"\r",
                "        },\r",
                "        \"aisle\": {\r",
                "          \"type\": \"string\"\r",
                "        },\r",
                "        \"author\": {\r",
                "          \"type\": \"string\"\r",
                "        }\r",
                "      },\r",
                "      \"required\": [\r",
                "        \"book_name\",\r",
                "        \"isbn\",\r",
                "        \"aisle\",\r",
                "        \"author\"\r",
                "      ]\r",
                "    }\r",
                "  ]\r",
                "}\r",
                "\r",
                "pm.test(\"The book details is successfully retrieved with status code 200\", function(){\r",
                "\r",
                "    pm.response.to.have.status(200);\r",
                "\r",
                "});\r",
                "\r",
                "pm.test(\"Validated response body with status code 200\", function(){\r",
                "\r",
                "    pm.response.to.have.status(200);\r",
                "            \r",
                "\r",
                "});\r",
                "\r",
                "pm.test(\"Validated Json schema response body\", function(){\r",
                "    pm.response.to.have.status(200);\r",
                "\r",
                "    pm.response.to.have.jsonSchema(schema);\r",
                "\r",
                "});\r",
                ""
              ],
              "_lastExecutionId": "5f875ec3-b9c5-4358-92ee-7d08c735f8e1"
            }
          }
        ]
      },
      {
        "id": "d47b0bee-0a0e-43a4-b2b8-395fa1be2e86",
        "name": "DeleteBook",
        "request": {
          "url": {
            "path": [
              "Library",
              "DeleteBook.php"
            ],
            "host": [
              "{{base_uri}}"
            ],
            "query": [
              {
                "disabled": true,
                "key": "ID",
                "value": "abcde337"
              }
            ],
            "variable": []
          },
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\r\n\"ID\":\"{{book_ID}}\"\r\n\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9338cce8-4ee2-4691-9c8b-80bf45b84166",
              "type": "text/javascript",
              "exec": [
                "const schema = {\r",
                "  \"type\": \"object\",\r",
                "  \"properties\": {\r",
                "    \"msg\": {\r",
                "      \"type\": \"string\"\r",
                "    }\r",
                "  },\r",
                "  \"required\": [\r",
                "    \"msg\"\r",
                "  ]\r",
                "}\r",
                "\r",
                "const jsondata2 = pm.response.json()\r",
                "\r",
                "pm.test(\"The book is successfully deleted with status code 200\", function(){\r",
                "\r",
                "    pm.response.to.have.status(200);\r",
                "    pm.expect(jsondata2).have.property(\"msg\");\r",
                "    pm.expect(jsondata2.msg).to.eql(\"book is successfully deleted\");\r",
                "    pm.expect(pm.response.text()).to.include(\"successfully\");\r",
                "    pm.expect(pm.response.text()).to.include(\"deleted\");\r",
                "    pm.response.to.have.jsonSchema(schema);\r",
                "\r",
                "    if(pm.environment.get(\"flag\"))\r",
                "    {\r",
                "        postman.setNextRequest(\"AddBook\");\r",
                "    }\r",
                "\r",
                "\r",
                "});"
              ],
              "_lastExecutionId": "c19cf950-62c1-430d-a629-2c3bff942b69"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "e3206180-2462-4c5f-a877-79cb31f54bff",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "d463f509-bfa7-444e-ad2f-a3fa7e771432"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "707aab9c-3806-4cc3-944f-4a32d7b74d7f",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "da751cbc-0637-444c-95a3-9edd9ae4bd8f"
        }
      }
    ],
    "variable": [
      {
        "type": "string",
        "value": "",
        "key": "isbn"
      },
      {
        "type": "string",
        "value": "false",
        "key": "flag"
      }
    ],
    "info": {
      "_postman_id": "c0b0a50b-8b8a-498a-8f8e-63f04fdcca2f",
      "name": "Library",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2022-07-02T18:40:43.449Z",
      "postman_exported_using": "Postman/9.23.3"
    },
    "id": "6cae775d-030e-45fd-9978-5c3691f485ff",
    "name": "UAT",
    "values": [
      {
        "type": "any",
        "value": "http://216.10.245.166",
        "key": "base_uri"
      },
      {
        "type": "any",
        "value": "439512529857",
        "key": "book_ID"
      },
      {
        "type": "any",
        "value": "Rahul Shetty",
        "key": "author_name"
      },
      {
        "type": "any",
        "value": "Angular",
        "key": "book_name"
      },
      {
        "type": "any",
        "value": "",
        "key": "book_id"
      },
      {
        "type": "any",
        "value": false,
        "key": "flag"
      },
      {
        "type": "any",
        "value": 43951,
        "key": "serialNo"
      }
    ]
  },
  "globals": {
    "_": {
      "postman_variable_scope": "globals",
      "postman_exported_at": "2022-07-01T16:50:27.498Z",
      "postman_exported_using": "Postman/9.23.3"
    },
    "id": "482cfc4e-fb92-4311-8699-15706eaa6469",
    "name": "Globals",
    "values": [
      {
        "type": "any",
        "value": "RS",
        "key": "companyCode"
      },
      {
        "type": "any",
        "value": "4%2F0AX4XfWieQmRiAzHesezH4CpZR00jna2_-1vchxwQEGrmX8WQrbrK4Aa2rCctpeYLZti59A",
        "key": "code"
      },
      {
        "type": "any",
        "value": "",
        "key": "access_token"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 30,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 21,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 89.11111111111111,
      "responseMin": 75,
      "responseMax": 172,
      "responseSd": 29.395556899506065,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1656788266956,
      "completed": 1656788268654
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 3,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2b5b65e3-d4aa-42b0-b0f0-f2673c581767",
          "httpRequestId": "acc45745-1d54-4cc0-bd02-b0458f9dfbad"
        },
        "item": {
          "id": "d5190b26-d582-4edb-bb5a-f596c1fb1aff",
          "name": "AddBook",
          "request": {
            "url": {
              "path": [
                "Library",
                "Addbook.php"
              ],
              "host": [
                "{{base_uri}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n\r\n\"name\":\"{{book_name}}\",\r\n\"isbn\":\"{{serialNo}}\",\r\n\"aisle\":\"2529857\",\r\n\"author\":\"{{author_name}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "73b1a556-2d0f-41b1-ab48-362ddb3a1345",
                "type": "text/javascript",
                "exec": [
                  "//Assertion - Validation response\r",
                  "pm.environment.set(\"flag\", false);\r",
                  "const jsonData = pm.response.json();\r",
                  "var req = JSON.parse(pm.request.body.raw);\r",
                  "console.log(jsonData);\r",
                  "console.log(jsonData.ID);\r",
                  "const bookID = jsonData.ID;\r",
                  "pm.environment.set(\"book_ID\", bookID);\r",
                  "\r",
                  "function cleanupScript()\r",
                  "{\r",
                  "    const book_id = getBookID();\r",
                  "    pm.environment.set(\"book_ID\",book_id);\r",
                  "    pm.environment.set(\"flag\", true);\r",
                  "    postman.setNextRequest(\"DeleteBook\");\r",
                  "\r",
                  "}\r",
                  "\r",
                  "function getBookID()\r",
                  "{\r",
                  "    const expected_id = req.isbn + req.aisle;\r",
                  "    return expected_id; \r",
                  "}\r",
                  "pm.test(\"Validate status code is 200\", function()\r",
                  "{\r",
                  "    try \r",
                  "    {\r",
                  "        pm.response.to.have.status(200);\r",
                  "        pm.expect(jsonData).have.property(\"Msg\");\r",
                  "        pm.expect(jsonData.Msg).to.eql(\"successfully added\");\r",
                  "    }\r",
                  "\r",
                  "    catch(err)\r",
                  "    {\r",
                  "        if(jsonData.msg.include(\"exists\"))\r",
                  "        {\r",
                  "            cleanupScript();\r",
                  "        }\r",
                  "\r",
                  "        \r",
                  "\r",
                  "    }  \r",
                  "\r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Header cookies response time validation\", function()\r",
                  "{\r",
                  "    //Added comments in Test section\r",
                  "    pm.response.to.have.header(\"Content-Type\");\r",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json;charset=UTF-8\");\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(2200);\r",
                  "    pm.expect(pm.response.text()).to.include(\"successfully added\");  \r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"ID Logic Validation\", function(){\r",
                  "    const expected_id = getBookID();\r",
                  "    pm.expect(expected_id).to.eql(bookID);\r",
                  "\r",
                  "\r",
                  "});"
                ],
                "_lastExecutionId": "600f3aa6-8702-4fa2-a763-83eacebd086a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "e406b21d-0e55-4117-a3b1-0d1851f44358",
                "type": "text/javascript",
                "exec": [
                  "//RS123456\r",
                  "\r",
                  "console.log(pm.globals.get(\"companyCode\"));\r",
                  "const code = pm.globals.get(\"companyCode\");\r",
                  "const value = pm.variables.replaceIn('{{$randomInt}}');\r",
                  "pm.collectionVariables.set(\"isbn\", code + value);\r",
                  "\r",
                  "pm.environment.set(\"book_name\", pm.iterationData.get(\"BookName\"));\r",
                  "pm.environment.set(\"author_name\", pm.iterationData.get(\"Author\"));\r",
                  "\r",
                  "console.log(pm.environment.get(\"book_name\"));\r",
                  "console.log(pm.environment.get(\"author_name\"));\r",
                  "\r",
                  "const serialNo = Math.floor((Math.random() * 100000) + 1);\r",
                  "pm.environment.set(\"serialNo\", serialNo);\r",
                  "console.log(serialNo);"
                ],
                "_lastExecutionId": "e708b98c-e427-4633-862c-a4118740dfb3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "Library",
              "Addbook.php"
            ],
            "host": [
              "216",
              "10",
              "245",
              "166"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "90079b7c-5c95-4fe7-8db6-c2210861776e",
              "system": true
            },
            {
              "key": "Host",
              "value": "216.10.245.166",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "87",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\r\n\"name\":\"Postman\",\r\n\"isbn\":\"19674\",\r\n\"aisle\":\"2529857\",\r\n\"author\":\"Rahul Shetty\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "9a218050-2b28-4a8a-8df0-84bffba920b6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sat, 02 Jul 2022 18:57:46 GMT"
            },
            {
              "key": "Server",
              "value": "Apache"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "POST"
            },
            {
              "key": "Access-Control-Max-Age",
              "value": "3600"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5, max=100"
            },
            {
              "key": "Connection",
              "value": "Keep-Alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              77,
              115,
              103,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              97,
              100,
              100,
              101,
              100,
              34,
              44,
              34,
              73,
              68,
              34,
              58,
              34,
              49,
              57,
              54,
              55,
              52,
              50,
              53,
              50,
              57,
              56,
              53,
              55,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 172,
          "responseSize": 48
        },
        "id": "d5190b26-d582-4edb-bb5a-f596c1fb1aff",
        "assertions": [
          {
            "assertion": "Validate status code is 200",
            "skipped": false
          },
          {
            "assertion": "Header cookies response time validation",
            "skipped": false
          },
          {
            "assertion": "ID Logic Validation",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e0f0609f-81a3-4cee-9807-bdbc954c1acc",
          "length": 3,
          "cycles": 3,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4c806e02-e1e0-4349-b9e9-cb528ac81e48"
        },
        "item": {
          "id": "29a9f17f-d4ba-498b-963a-36a91cdd4fbc",
          "name": "GetBook",
          "request": {
            "url": {
              "path": [
                "Library",
                "GetBook.php"
              ],
              "host": [
                "{{base_uri}}"
              ],
              "query": [
                {
                  "key": "ID",
                  "value": "{{book_ID}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a5236f0a-3a14-40d2-aa83-be4a514cf0b6",
                "type": "text/javascript",
                "exec": [
                  "const bookjsonData = pm.response.json()\r",
                  "const schema = {\r",
                  "  \"type\": \"array\",\r",
                  "  \"items\": [\r",
                  "    {\r",
                  "      \"type\": \"object\",\r",
                  "      \"properties\": {\r",
                  "        \"book_name\": {\r",
                  "          \"type\": \"string\"\r",
                  "        },\r",
                  "        \"isbn\": {\r",
                  "          \"type\": \"string\"\r",
                  "        },\r",
                  "        \"aisle\": {\r",
                  "          \"type\": \"string\"\r",
                  "        },\r",
                  "        \"author\": {\r",
                  "          \"type\": \"string\"\r",
                  "        }\r",
                  "      },\r",
                  "      \"required\": [\r",
                  "        \"book_name\",\r",
                  "        \"isbn\",\r",
                  "        \"aisle\",\r",
                  "        \"author\"\r",
                  "      ]\r",
                  "    }\r",
                  "  ]\r",
                  "}\r",
                  "\r",
                  "pm.test(\"The book details is successfully retrieved with status code 200\", function(){\r",
                  "\r",
                  "    pm.response.to.have.status(200);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validated response body with status code 200\", function(){\r",
                  "\r",
                  "    pm.response.to.have.status(200);\r",
                  "            \r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validated Json schema response body\", function(){\r",
                  "    pm.response.to.have.status(200);\r",
                  "\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "5f875ec3-b9c5-4358-92ee-7d08c735f8e1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "Library",
              "GetBook.php"
            ],
            "host": [
              "216",
              "10",
              "245",
              "166"
            ],
            "query": [
              {
                "key": "ID",
                "value": "196742529857"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "16de97b8-b6d4-4f2b-9354-279fcd86302a",
              "system": true
            },
            {
              "key": "Host",
              "value": "216.10.245.166",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "309588b1-4469-4379-beb0-29ebccc96721",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sat, 02 Jul 2022 18:57:47 GMT"
            },
            {
              "key": "Server",
              "value": "Apache"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "POST"
            },
            {
              "key": "Access-Control-Max-Age",
              "value": "3600"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5, max=99"
            },
            {
              "key": "Connection",
              "value": "Keep-Alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              98,
              111,
              111,
              107,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              34,
              44,
              34,
              105,
              115,
              98,
              110,
              34,
              58,
              34,
              49,
              57,
              54,
              55,
              52,
              34,
              44,
              34,
              97,
              105,
              115,
              108,
              101,
              34,
              58,
              34,
              50,
              53,
              50,
              57,
              56,
              53,
              55,
              34,
              44,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              34,
              82,
              97,
              104,
              117,
              108,
              32,
              83,
              104,
              101,
              116,
              116,
              121,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 77,
          "responseSize": 82
        },
        "id": "29a9f17f-d4ba-498b-963a-36a91cdd4fbc",
        "assertions": [
          {
            "assertion": "The book details is successfully retrieved with status code 200",
            "skipped": false
          },
          {
            "assertion": "Validated response body with status code 200",
            "skipped": false
          },
          {
            "assertion": "Validated Json schema response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b84135d4-cb25-4927-b686-35fd9bfeebcc",
          "length": 3,
          "cycles": 3,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "996d6647-563e-48cc-aa74-2839a363636d"
        },
        "item": {
          "id": "d47b0bee-0a0e-43a4-b2b8-395fa1be2e86",
          "name": "DeleteBook",
          "request": {
            "url": {
              "path": [
                "Library",
                "DeleteBook.php"
              ],
              "host": [
                "{{base_uri}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "ID",
                  "value": "abcde337"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "{\r\n\r\n\"ID\":\"{{book_ID}}\"\r\n\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9338cce8-4ee2-4691-9c8b-80bf45b84166",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "  \"type\": \"object\",\r",
                  "  \"properties\": {\r",
                  "    \"msg\": {\r",
                  "      \"type\": \"string\"\r",
                  "    }\r",
                  "  },\r",
                  "  \"required\": [\r",
                  "    \"msg\"\r",
                  "  ]\r",
                  "}\r",
                  "\r",
                  "const jsondata2 = pm.response.json()\r",
                  "\r",
                  "pm.test(\"The book is successfully deleted with status code 200\", function(){\r",
                  "\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(jsondata2).have.property(\"msg\");\r",
                  "    pm.expect(jsondata2.msg).to.eql(\"book is successfully deleted\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"successfully\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"deleted\");\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "\r",
                  "    if(pm.environment.get(\"flag\"))\r",
                  "    {\r",
                  "        postman.setNextRequest(\"AddBook\");\r",
                  "    }\r",
                  "\r",
                  "\r",
                  "});"
                ],
                "_lastExecutionId": "c19cf950-62c1-430d-a629-2c3bff942b69"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "Library",
              "DeleteBook.php"
            ],
            "host": [
              "216",
              "10",
              "245",
              "166"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9d5a87b7-29e3-4d98-899e-3844895e1910",
              "system": true
            },
            {
              "key": "Host",
              "value": "216.10.245.166",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "29",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\r\n\"ID\":\"196742529857\"\r\n\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "1de4e0f4-bda1-48c7-ac0f-8cbbc7abb328",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sat, 02 Jul 2022 18:57:47 GMT"
            },
            {
              "key": "Server",
              "value": "Apache"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "POST"
            },
            {
              "key": "Access-Control-Max-Age",
              "value": "3600"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5, max=98"
            },
            {
              "key": "Connection",
              "value": "Keep-Alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              98,
              111,
              111,
              107,
              32,
              105,
              115,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 77,
          "responseSize": 38
        },
        "id": "d47b0bee-0a0e-43a4-b2b8-395fa1be2e86",
        "assertions": [
          {
            "assertion": "The book is successfully deleted with status code 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "aad9bea6-127b-4bc9-a28a-2d937079619e",
          "length": 3,
          "cycles": 3,
          "position": 0,
          "iteration": 1,
          "cr": true,
          "httpRequestId": "646baca1-f73a-415f-ab4a-4a98d2f04907"
        },
        "item": {
          "id": "d5190b26-d582-4edb-bb5a-f596c1fb1aff",
          "name": "AddBook",
          "request": {
            "url": {
              "path": [
                "Library",
                "Addbook.php"
              ],
              "host": [
                "{{base_uri}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n\r\n\"name\":\"{{book_name}}\",\r\n\"isbn\":\"{{serialNo}}\",\r\n\"aisle\":\"2529857\",\r\n\"author\":\"{{author_name}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "73b1a556-2d0f-41b1-ab48-362ddb3a1345",
                "type": "text/javascript",
                "exec": [
                  "//Assertion - Validation response\r",
                  "pm.environment.set(\"flag\", false);\r",
                  "const jsonData = pm.response.json();\r",
                  "var req = JSON.parse(pm.request.body.raw);\r",
                  "console.log(jsonData);\r",
                  "console.log(jsonData.ID);\r",
                  "const bookID = jsonData.ID;\r",
                  "pm.environment.set(\"book_ID\", bookID);\r",
                  "\r",
                  "function cleanupScript()\r",
                  "{\r",
                  "    const book_id = getBookID();\r",
                  "    pm.environment.set(\"book_ID\",book_id);\r",
                  "    pm.environment.set(\"flag\", true);\r",
                  "    postman.setNextRequest(\"DeleteBook\");\r",
                  "\r",
                  "}\r",
                  "\r",
                  "function getBookID()\r",
                  "{\r",
                  "    const expected_id = req.isbn + req.aisle;\r",
                  "    return expected_id; \r",
                  "}\r",
                  "pm.test(\"Validate status code is 200\", function()\r",
                  "{\r",
                  "    try \r",
                  "    {\r",
                  "        pm.response.to.have.status(200);\r",
                  "        pm.expect(jsonData).have.property(\"Msg\");\r",
                  "        pm.expect(jsonData.Msg).to.eql(\"successfully added\");\r",
                  "    }\r",
                  "\r",
                  "    catch(err)\r",
                  "    {\r",
                  "        if(jsonData.msg.include(\"exists\"))\r",
                  "        {\r",
                  "            cleanupScript();\r",
                  "        }\r",
                  "\r",
                  "        \r",
                  "\r",
                  "    }  \r",
                  "\r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Header cookies response time validation\", function()\r",
                  "{\r",
                  "    //Added comments in Test section\r",
                  "    pm.response.to.have.header(\"Content-Type\");\r",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json;charset=UTF-8\");\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(2200);\r",
                  "    pm.expect(pm.response.text()).to.include(\"successfully added\");  \r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"ID Logic Validation\", function(){\r",
                  "    const expected_id = getBookID();\r",
                  "    pm.expect(expected_id).to.eql(bookID);\r",
                  "\r",
                  "\r",
                  "});"
                ],
                "_lastExecutionId": "600f3aa6-8702-4fa2-a763-83eacebd086a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "e406b21d-0e55-4117-a3b1-0d1851f44358",
                "type": "text/javascript",
                "exec": [
                  "//RS123456\r",
                  "\r",
                  "console.log(pm.globals.get(\"companyCode\"));\r",
                  "const code = pm.globals.get(\"companyCode\");\r",
                  "const value = pm.variables.replaceIn('{{$randomInt}}');\r",
                  "pm.collectionVariables.set(\"isbn\", code + value);\r",
                  "\r",
                  "pm.environment.set(\"book_name\", pm.iterationData.get(\"BookName\"));\r",
                  "pm.environment.set(\"author_name\", pm.iterationData.get(\"Author\"));\r",
                  "\r",
                  "console.log(pm.environment.get(\"book_name\"));\r",
                  "console.log(pm.environment.get(\"author_name\"));\r",
                  "\r",
                  "const serialNo = Math.floor((Math.random() * 100000) + 1);\r",
                  "pm.environment.set(\"serialNo\", serialNo);\r",
                  "console.log(serialNo);"
                ],
                "_lastExecutionId": "e708b98c-e427-4633-862c-a4118740dfb3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "Library",
              "Addbook.php"
            ],
            "host": [
              "216",
              "10",
              "245",
              "166"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cb38ec21-98b1-4eec-b0a1-243b26bf5f2e",
              "system": true
            },
            {
              "key": "Host",
              "value": "216.10.245.166",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "76",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\r\n\"name\":\"Git\",\r\n\"isbn\":\"72556\",\r\n\"aisle\":\"2529857\",\r\n\"author\":\"Rahul\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "9feb691c-434d-4b53-8c74-6b3e7cd409a0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sat, 02 Jul 2022 18:57:47 GMT"
            },
            {
              "key": "Server",
              "value": "Apache"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "POST"
            },
            {
              "key": "Access-Control-Max-Age",
              "value": "3600"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5, max=97"
            },
            {
              "key": "Connection",
              "value": "Keep-Alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              77,
              115,
              103,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              97,
              100,
              100,
              101,
              100,
              34,
              44,
              34,
              73,
              68,
              34,
              58,
              34,
              55,
              50,
              53,
              53,
              54,
              50,
              53,
              50,
              57,
              56,
              53,
              55,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 82,
          "responseSize": 48
        },
        "id": "d5190b26-d582-4edb-bb5a-f596c1fb1aff",
        "assertions": [
          {
            "assertion": "Validate status code is 200",
            "skipped": false
          },
          {
            "assertion": "Header cookies response time validation",
            "skipped": false
          },
          {
            "assertion": "ID Logic Validation",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "005a59c8-5cf6-4c9b-94ea-f3a2444bb73d",
          "length": 3,
          "cycles": 3,
          "position": 1,
          "iteration": 1,
          "httpRequestId": "4adbc518-a03b-47fa-a190-6007d13248a2"
        },
        "item": {
          "id": "29a9f17f-d4ba-498b-963a-36a91cdd4fbc",
          "name": "GetBook",
          "request": {
            "url": {
              "path": [
                "Library",
                "GetBook.php"
              ],
              "host": [
                "{{base_uri}}"
              ],
              "query": [
                {
                  "key": "ID",
                  "value": "{{book_ID}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a5236f0a-3a14-40d2-aa83-be4a514cf0b6",
                "type": "text/javascript",
                "exec": [
                  "const bookjsonData = pm.response.json()\r",
                  "const schema = {\r",
                  "  \"type\": \"array\",\r",
                  "  \"items\": [\r",
                  "    {\r",
                  "      \"type\": \"object\",\r",
                  "      \"properties\": {\r",
                  "        \"book_name\": {\r",
                  "          \"type\": \"string\"\r",
                  "        },\r",
                  "        \"isbn\": {\r",
                  "          \"type\": \"string\"\r",
                  "        },\r",
                  "        \"aisle\": {\r",
                  "          \"type\": \"string\"\r",
                  "        },\r",
                  "        \"author\": {\r",
                  "          \"type\": \"string\"\r",
                  "        }\r",
                  "      },\r",
                  "      \"required\": [\r",
                  "        \"book_name\",\r",
                  "        \"isbn\",\r",
                  "        \"aisle\",\r",
                  "        \"author\"\r",
                  "      ]\r",
                  "    }\r",
                  "  ]\r",
                  "}\r",
                  "\r",
                  "pm.test(\"The book details is successfully retrieved with status code 200\", function(){\r",
                  "\r",
                  "    pm.response.to.have.status(200);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validated response body with status code 200\", function(){\r",
                  "\r",
                  "    pm.response.to.have.status(200);\r",
                  "            \r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validated Json schema response body\", function(){\r",
                  "    pm.response.to.have.status(200);\r",
                  "\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "5f875ec3-b9c5-4358-92ee-7d08c735f8e1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "Library",
              "GetBook.php"
            ],
            "host": [
              "216",
              "10",
              "245",
              "166"
            ],
            "query": [
              {
                "key": "ID",
                "value": "725562529857"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "14c7a8ea-5114-4e3f-b4a4-1917494e0321",
              "system": true
            },
            {
              "key": "Host",
              "value": "216.10.245.166",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "3b6a7066-933b-4936-983f-be741ee75c43",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sat, 02 Jul 2022 18:57:47 GMT"
            },
            {
              "key": "Server",
              "value": "Apache"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "POST"
            },
            {
              "key": "Access-Control-Max-Age",
              "value": "3600"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5, max=96"
            },
            {
              "key": "Connection",
              "value": "Keep-Alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              98,
              111,
              111,
              107,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              71,
              105,
              116,
              34,
              44,
              34,
              105,
              115,
              98,
              110,
              34,
              58,
              34,
              55,
              50,
              53,
              53,
              54,
              34,
              44,
              34,
              97,
              105,
              115,
              108,
              101,
              34,
              58,
              34,
              50,
              53,
              50,
              57,
              56,
              53,
              55,
              34,
              44,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              34,
              82,
              97,
              104,
              117,
              108,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 78,
          "responseSize": 71
        },
        "id": "29a9f17f-d4ba-498b-963a-36a91cdd4fbc",
        "assertions": [
          {
            "assertion": "The book details is successfully retrieved with status code 200",
            "skipped": false
          },
          {
            "assertion": "Validated response body with status code 200",
            "skipped": false
          },
          {
            "assertion": "Validated Json schema response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "77bd343b-7017-4ba8-a3e6-9905ca5f3f20",
          "length": 3,
          "cycles": 3,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "67e3ad08-c59a-4b1c-94e9-659735a8bb1b"
        },
        "item": {
          "id": "d47b0bee-0a0e-43a4-b2b8-395fa1be2e86",
          "name": "DeleteBook",
          "request": {
            "url": {
              "path": [
                "Library",
                "DeleteBook.php"
              ],
              "host": [
                "{{base_uri}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "ID",
                  "value": "abcde337"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "{\r\n\r\n\"ID\":\"{{book_ID}}\"\r\n\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9338cce8-4ee2-4691-9c8b-80bf45b84166",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "  \"type\": \"object\",\r",
                  "  \"properties\": {\r",
                  "    \"msg\": {\r",
                  "      \"type\": \"string\"\r",
                  "    }\r",
                  "  },\r",
                  "  \"required\": [\r",
                  "    \"msg\"\r",
                  "  ]\r",
                  "}\r",
                  "\r",
                  "const jsondata2 = pm.response.json()\r",
                  "\r",
                  "pm.test(\"The book is successfully deleted with status code 200\", function(){\r",
                  "\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(jsondata2).have.property(\"msg\");\r",
                  "    pm.expect(jsondata2.msg).to.eql(\"book is successfully deleted\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"successfully\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"deleted\");\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "\r",
                  "    if(pm.environment.get(\"flag\"))\r",
                  "    {\r",
                  "        postman.setNextRequest(\"AddBook\");\r",
                  "    }\r",
                  "\r",
                  "\r",
                  "});"
                ],
                "_lastExecutionId": "c19cf950-62c1-430d-a629-2c3bff942b69"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "Library",
              "DeleteBook.php"
            ],
            "host": [
              "216",
              "10",
              "245",
              "166"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ba91fd23-3899-4fbe-93cb-eb2208dec403",
              "system": true
            },
            {
              "key": "Host",
              "value": "216.10.245.166",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "29",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\r\n\"ID\":\"725562529857\"\r\n\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "70b18e3a-f55e-42a6-af7b-b1547532b5a2",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sat, 02 Jul 2022 18:57:47 GMT"
            },
            {
              "key": "Server",
              "value": "Apache"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "POST"
            },
            {
              "key": "Access-Control-Max-Age",
              "value": "3600"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5, max=95"
            },
            {
              "key": "Connection",
              "value": "Keep-Alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              98,
              111,
              111,
              107,
              32,
              105,
              115,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 82,
          "responseSize": 38
        },
        "id": "d47b0bee-0a0e-43a4-b2b8-395fa1be2e86",
        "assertions": [
          {
            "assertion": "The book is successfully deleted with status code 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "dd1c88aa-9eb7-4f7e-afbf-b8683336b524",
          "length": 3,
          "cycles": 3,
          "position": 0,
          "iteration": 2,
          "cr": true,
          "httpRequestId": "d166a4ba-9eca-4f57-bdb3-28716e2043f3"
        },
        "item": {
          "id": "d5190b26-d582-4edb-bb5a-f596c1fb1aff",
          "name": "AddBook",
          "request": {
            "url": {
              "path": [
                "Library",
                "Addbook.php"
              ],
              "host": [
                "{{base_uri}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n\r\n\"name\":\"{{book_name}}\",\r\n\"isbn\":\"{{serialNo}}\",\r\n\"aisle\":\"2529857\",\r\n\"author\":\"{{author_name}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "73b1a556-2d0f-41b1-ab48-362ddb3a1345",
                "type": "text/javascript",
                "exec": [
                  "//Assertion - Validation response\r",
                  "pm.environment.set(\"flag\", false);\r",
                  "const jsonData = pm.response.json();\r",
                  "var req = JSON.parse(pm.request.body.raw);\r",
                  "console.log(jsonData);\r",
                  "console.log(jsonData.ID);\r",
                  "const bookID = jsonData.ID;\r",
                  "pm.environment.set(\"book_ID\", bookID);\r",
                  "\r",
                  "function cleanupScript()\r",
                  "{\r",
                  "    const book_id = getBookID();\r",
                  "    pm.environment.set(\"book_ID\",book_id);\r",
                  "    pm.environment.set(\"flag\", true);\r",
                  "    postman.setNextRequest(\"DeleteBook\");\r",
                  "\r",
                  "}\r",
                  "\r",
                  "function getBookID()\r",
                  "{\r",
                  "    const expected_id = req.isbn + req.aisle;\r",
                  "    return expected_id; \r",
                  "}\r",
                  "pm.test(\"Validate status code is 200\", function()\r",
                  "{\r",
                  "    try \r",
                  "    {\r",
                  "        pm.response.to.have.status(200);\r",
                  "        pm.expect(jsonData).have.property(\"Msg\");\r",
                  "        pm.expect(jsonData.Msg).to.eql(\"successfully added\");\r",
                  "    }\r",
                  "\r",
                  "    catch(err)\r",
                  "    {\r",
                  "        if(jsonData.msg.include(\"exists\"))\r",
                  "        {\r",
                  "            cleanupScript();\r",
                  "        }\r",
                  "\r",
                  "        \r",
                  "\r",
                  "    }  \r",
                  "\r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Header cookies response time validation\", function()\r",
                  "{\r",
                  "    //Added comments in Test section\r",
                  "    pm.response.to.have.header(\"Content-Type\");\r",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json;charset=UTF-8\");\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(2200);\r",
                  "    pm.expect(pm.response.text()).to.include(\"successfully added\");  \r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"ID Logic Validation\", function(){\r",
                  "    const expected_id = getBookID();\r",
                  "    pm.expect(expected_id).to.eql(bookID);\r",
                  "\r",
                  "\r",
                  "});"
                ],
                "_lastExecutionId": "600f3aa6-8702-4fa2-a763-83eacebd086a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "e406b21d-0e55-4117-a3b1-0d1851f44358",
                "type": "text/javascript",
                "exec": [
                  "//RS123456\r",
                  "\r",
                  "console.log(pm.globals.get(\"companyCode\"));\r",
                  "const code = pm.globals.get(\"companyCode\");\r",
                  "const value = pm.variables.replaceIn('{{$randomInt}}');\r",
                  "pm.collectionVariables.set(\"isbn\", code + value);\r",
                  "\r",
                  "pm.environment.set(\"book_name\", pm.iterationData.get(\"BookName\"));\r",
                  "pm.environment.set(\"author_name\", pm.iterationData.get(\"Author\"));\r",
                  "\r",
                  "console.log(pm.environment.get(\"book_name\"));\r",
                  "console.log(pm.environment.get(\"author_name\"));\r",
                  "\r",
                  "const serialNo = Math.floor((Math.random() * 100000) + 1);\r",
                  "pm.environment.set(\"serialNo\", serialNo);\r",
                  "console.log(serialNo);"
                ],
                "_lastExecutionId": "e708b98c-e427-4633-862c-a4118740dfb3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "Library",
              "Addbook.php"
            ],
            "host": [
              "216",
              "10",
              "245",
              "166"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "404b2275-cbee-4b14-91e9-656e1495e4f6",
              "system": true
            },
            {
              "key": "Host",
              "value": "216.10.245.166",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "87",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\r\n\"name\":\"Angular\",\r\n\"isbn\":\"43951\",\r\n\"aisle\":\"2529857\",\r\n\"author\":\"Rahul Shetty\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "81a5cfc2-bc29-4f76-ac35-c04dc677edbf",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sat, 02 Jul 2022 18:57:47 GMT"
            },
            {
              "key": "Server",
              "value": "Apache"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "POST"
            },
            {
              "key": "Access-Control-Max-Age",
              "value": "3600"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5, max=94"
            },
            {
              "key": "Connection",
              "value": "Keep-Alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              77,
              115,
              103,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              97,
              100,
              100,
              101,
              100,
              34,
              44,
              34,
              73,
              68,
              34,
              58,
              34,
              52,
              51,
              57,
              53,
              49,
              50,
              53,
              50,
              57,
              56,
              53,
              55,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 81,
          "responseSize": 48
        },
        "id": "d5190b26-d582-4edb-bb5a-f596c1fb1aff",
        "assertions": [
          {
            "assertion": "Validate status code is 200",
            "skipped": false
          },
          {
            "assertion": "Header cookies response time validation",
            "skipped": false
          },
          {
            "assertion": "ID Logic Validation",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f1a59598-b9a4-441a-8dc9-364a261cd60e",
          "length": 3,
          "cycles": 3,
          "position": 1,
          "iteration": 2,
          "httpRequestId": "ee5d50e2-d8e6-48fa-984c-2f488b6ad69f"
        },
        "item": {
          "id": "29a9f17f-d4ba-498b-963a-36a91cdd4fbc",
          "name": "GetBook",
          "request": {
            "url": {
              "path": [
                "Library",
                "GetBook.php"
              ],
              "host": [
                "{{base_uri}}"
              ],
              "query": [
                {
                  "key": "ID",
                  "value": "{{book_ID}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a5236f0a-3a14-40d2-aa83-be4a514cf0b6",
                "type": "text/javascript",
                "exec": [
                  "const bookjsonData = pm.response.json()\r",
                  "const schema = {\r",
                  "  \"type\": \"array\",\r",
                  "  \"items\": [\r",
                  "    {\r",
                  "      \"type\": \"object\",\r",
                  "      \"properties\": {\r",
                  "        \"book_name\": {\r",
                  "          \"type\": \"string\"\r",
                  "        },\r",
                  "        \"isbn\": {\r",
                  "          \"type\": \"string\"\r",
                  "        },\r",
                  "        \"aisle\": {\r",
                  "          \"type\": \"string\"\r",
                  "        },\r",
                  "        \"author\": {\r",
                  "          \"type\": \"string\"\r",
                  "        }\r",
                  "      },\r",
                  "      \"required\": [\r",
                  "        \"book_name\",\r",
                  "        \"isbn\",\r",
                  "        \"aisle\",\r",
                  "        \"author\"\r",
                  "      ]\r",
                  "    }\r",
                  "  ]\r",
                  "}\r",
                  "\r",
                  "pm.test(\"The book details is successfully retrieved with status code 200\", function(){\r",
                  "\r",
                  "    pm.response.to.have.status(200);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validated response body with status code 200\", function(){\r",
                  "\r",
                  "    pm.response.to.have.status(200);\r",
                  "            \r",
                  "\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validated Json schema response body\", function(){\r",
                  "    pm.response.to.have.status(200);\r",
                  "\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "5f875ec3-b9c5-4358-92ee-7d08c735f8e1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "Library",
              "GetBook.php"
            ],
            "host": [
              "216",
              "10",
              "245",
              "166"
            ],
            "query": [
              {
                "key": "ID",
                "value": "439512529857"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dbce98d8-b47b-4fb2-be8b-b1d616349a42",
              "system": true
            },
            {
              "key": "Host",
              "value": "216.10.245.166",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "18dea936-d5a9-4efb-b071-6bbefa662d8d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sat, 02 Jul 2022 18:57:48 GMT"
            },
            {
              "key": "Server",
              "value": "Apache"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "POST"
            },
            {
              "key": "Access-Control-Max-Age",
              "value": "3600"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5, max=93"
            },
            {
              "key": "Connection",
              "value": "Keep-Alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              98,
              111,
              111,
              107,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              110,
              103,
              117,
              108,
              97,
              114,
              34,
              44,
              34,
              105,
              115,
              98,
              110,
              34,
              58,
              34,
              52,
              51,
              57,
              53,
              49,
              34,
              44,
              34,
              97,
              105,
              115,
              108,
              101,
              34,
              58,
              34,
              50,
              53,
              50,
              57,
              56,
              53,
              55,
              34,
              44,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              34,
              82,
              97,
              104,
              117,
              108,
              32,
              83,
              104,
              101,
              116,
              116,
              121,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 75,
          "responseSize": 82
        },
        "id": "29a9f17f-d4ba-498b-963a-36a91cdd4fbc",
        "assertions": [
          {
            "assertion": "The book details is successfully retrieved with status code 200",
            "skipped": false
          },
          {
            "assertion": "Validated response body with status code 200",
            "skipped": false
          },
          {
            "assertion": "Validated Json schema response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c48598b9-74d9-46f5-89b2-7b0384b23219",
          "length": 3,
          "cycles": 3,
          "position": 2,
          "iteration": 2,
          "httpRequestId": "e64c46fa-2713-4a1b-8f18-806022bdda6a"
        },
        "item": {
          "id": "d47b0bee-0a0e-43a4-b2b8-395fa1be2e86",
          "name": "DeleteBook",
          "request": {
            "url": {
              "path": [
                "Library",
                "DeleteBook.php"
              ],
              "host": [
                "{{base_uri}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "ID",
                  "value": "abcde337"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "{\r\n\r\n\"ID\":\"{{book_ID}}\"\r\n\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9338cce8-4ee2-4691-9c8b-80bf45b84166",
                "type": "text/javascript",
                "exec": [
                  "const schema = {\r",
                  "  \"type\": \"object\",\r",
                  "  \"properties\": {\r",
                  "    \"msg\": {\r",
                  "      \"type\": \"string\"\r",
                  "    }\r",
                  "  },\r",
                  "  \"required\": [\r",
                  "    \"msg\"\r",
                  "  ]\r",
                  "}\r",
                  "\r",
                  "const jsondata2 = pm.response.json()\r",
                  "\r",
                  "pm.test(\"The book is successfully deleted with status code 200\", function(){\r",
                  "\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(jsondata2).have.property(\"msg\");\r",
                  "    pm.expect(jsondata2.msg).to.eql(\"book is successfully deleted\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"successfully\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"deleted\");\r",
                  "    pm.response.to.have.jsonSchema(schema);\r",
                  "\r",
                  "    if(pm.environment.get(\"flag\"))\r",
                  "    {\r",
                  "        postman.setNextRequest(\"AddBook\");\r",
                  "    }\r",
                  "\r",
                  "\r",
                  "});"
                ],
                "_lastExecutionId": "c19cf950-62c1-430d-a629-2c3bff942b69"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "path": [
              "Library",
              "DeleteBook.php"
            ],
            "host": [
              "216",
              "10",
              "245",
              "166"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2ba16ab8-0922-4c8d-adc6-5b7202227775",
              "system": true
            },
            {
              "key": "Host",
              "value": "216.10.245.166",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "29",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\r\n\"ID\":\"439512529857\"\r\n\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "b0b4fd6b-1ab8-4105-b86c-e62f7fc794e4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Sat, 02 Jul 2022 18:57:48 GMT"
            },
            {
              "key": "Server",
              "value": "Apache"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "POST"
            },
            {
              "key": "Access-Control-Max-Age",
              "value": "3600"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5, max=92"
            },
            {
              "key": "Connection",
              "value": "Keep-Alive"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              98,
              111,
              111,
              107,
              32,
              105,
              115,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 78,
          "responseSize": 38
        },
        "id": "d47b0bee-0a0e-43a4-b2b8-395fa1be2e86",
        "assertions": [
          {
            "assertion": "The book is successfully deleted with status code 200",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 493
    },
    "failures": [],
    "error": null
  }
}